---
# tasks file for /etc/ansible/GIT/Dimko/roles/Filebeat
- hosts: all
  become: sudo
  tasks:
    - name: Download filebeat
      shell: wget -q -O $1/$FILEBEAT_PACKAGE --ftp-user=acm --ftp-password=acm ftp://172.27.1.100/$FILEBEAT_PACKAGE

    - name: Create directories
      file:
        path: /opt/filebeat/{{item}}
        state: directory
        mode: 0755
      with_items:
      - /private
      - /certs
      
    - name: Installing filebeat
      shell: |
        tar xvzf $1/$FILEBEAT_PACKAGE -C /opt/filebeat --strip-components=1
     
    - name: Copy filebeat-sc
      copy:
        src: filebeat-sc
        dest: /etc/init.d/filebeat
        
    - name: Replace FILEBEAT_DIR
      replace:
        path: /etc/init.d/filebeat
        regexp: "//$FILEBEAT_DIR"
        replace: "{{ FILEBEAT_DIR }}"
        backup: yes
    
    - name: Replace the FILEBEAT_SERVICE_USER
      replace:
        path: /etc/init.d/filebeat
        regexp: "//$FILEBEAT_SERVICE_USER"
        replace: "{{ FILEBEAT_SERVICE_USER }}"
        backup: yes
        
    - name: Creating FileBeat User
      user:
        name: {{ FILEBEAT_SERVICE_USER }}
##     shell: useradd $FILEBEAT_SERVICE_USER
      
    - name: Setting password for FileBeat user
      shell: |
        echo -e "{{ FILEBEAT_SERVICE_PASS }}\n{{ FILEBEAT_SERVICE_PASS }}" | passwd {{ FILEBEAT_SERVICE_USER }}
      
    - name: Unset
      shell: |    
        unset "{{ FILEBEAT_SERVICE_PASS }}"
      
    - name: Setting ownership for FileBeat user to filebeat directory
      file:
        dest: {{ FILEBEAT_DIR }}
        owner: {{ FILEBEAT_SERVICE_USER }}
        group: {{ FILEBEAT_SERVICE_USER }}
        mode: 0755
        recurse: yes
##      shell: chown -R $FILEBEAT_SERVICE_USER:$FILEBEAT_SERVICE_USER $FILEBEAT_DIR

###### This is not needed since I copy the file in the begining       
##    - name: Copy filebeat script to init.directories
##      shell: cp $1/$FILEBEAT_SCRIPT /etc/init.d/filebeat
      
    - name: Make filebeat executable
      shell: chmod +x /etc/init.d/filebeat
      
##    - name: Copy the certificates to remote machine
##      copy:
##        src: certs/
##        dest: /tmp/filebeat/certs
        
    - name: Install certificates for filebeat->logstash tls communication
      copy:
        src: certs/acm-elasticsearch-server-client.cert.pem
        dest: '"{{ FILEBEAT_DIR }}"/certs/'
        remote_src: yes
        
    - name: Install certificates for filebeat->logstash tls communication 2
      copy:
        src: certs/acm-elasticsearch-server-client.key.pem
        dest: '"{{ FILEBEAT_DIR }}"/private/'
        remote_src: yes
        
    - name: Install certificates for filebeat->logstash tls communication 3
      copy:
        src: certs/ca-chain.cert.pem
        dest: '"{{ FILEBEAT_DIR }}"/certs/'
        remote_src: yes
        
    - name: Change ownership
      shell: chown -R filebeat.filebeat $FILEBEAT_DIR/
      
    - name: Adding filebeat to startup and shutdown scripts
      shell: |
        echo '/etc/init.d/filebeat start' >> /usr/local/bin/startup.sh
        echo '/etc/init.d/filebeat stop' >> /usr/local/bin/shutdown.sh
        
    

    
    - name: Install FILEBEAT_DIR (Pisi lokacija od kade da se instalira)
      shell: install_filebeat /????/????
      
    - name: Copy Filebeat config file - filebeat.yml   ????  (Proveri dali ke go iskopira i preimeni file-ot)
      copy:
        src: {{ FILEBEAT_ELK_CONFIG_FILE }}
        dest: '"{{ FILEBEAT_DIR }}"/filebeat.yml'
      
    - name: Setting Filebeat config file - filebeat.yml
      replace:
        path: '"{{ FILEBEAT_DIR }}"/filebeat.yml'
        regexp: "\\$ELK_PORT"
        replace: "{{ ELK_PORT }}"
        backup: yes
        
    - name: Change ownership
      file:
        dest: '"{{ FILEBEAT_DIR }}"/'
        owner: filebeat
        group: filebeat
        mode: 0755
        recurse: yes
        
    - name: Delete the default config file for FILEBEAT_DIR
      file:
        path: '"{{ FILEBEAT_CONF_DIR }}"/filebeat.yml'
        state: absent
        
    - name: Create filebeat_conf directory
      file:
        path: '"{{ FILEBEAT_CONF_DIR }}"/conf.d/filebeat'
        state: directory
        mode: 0755
        
    - name: Copy the config files
      copy:
        src: /filebeat_configs/
        dest: '"{{ FILEBEAT_DIR }}"/conf.d/'
        
    - name: Change the FREVVO_LOG_PATH
      replace:
        path: {{ FILEBEAT_DIR }}/conf.d/{{ FILEBEAT_FREVVO_CONFIG_FILE }}
        regexp: "//$FREVVO_LOG_PATH"
        replace: "{{ FREVVO_LOG_PATH }}"
        backup: yes
        
    - name: Change the LOGSTASH_FREVVO_PORT
      replace:
        path: {{ FILEBEAT_DIR }}/conf.d/{{ FILEBEAT_FREVVO_CONFIG_FILE }}
        regexp: "//$LOGSTASH_FREVVO_PORT"
        replace: "{{ LOGSTASH_FREVVO_PORT }}"
        backup: yes
        
    - name: Change the ALF_HOME
      replace:
        path: {{ FILEBEAT_DIR }}/conf.d/{{ FILEBEAT_ALF_CONFIG_FILE }}
        regexp: "//$ALF_HOME"
        replace: "{{ ALF_HOME }}"
        backup: yes
        
    - name: Change the LOGSTASH_ALF_PORT
      replace:
        path: {{ FILEBEAT_DIR }}/conf.d/{{ FILEBEAT_ALF_CONFIG_FILE }}
        regexp: "//$LOGSTASH_ALF_PORT"
        replace: {{ LOGSTASH_ALF_PORT }}
        backup: yes
        
    - name: Change the PENTAHO_HOME
      replace:
        path: {{ FILEBEAT_DIR }}/conf.d/{{ FILEBEAT_PENTAHO_CONFIG_FILE }}
        regexp: "//$PENTAHO_HOME"
        replace: "{{ PENTAHO_HOME }}"
        backup: yes
        
    - name: Chenge the LOGSTASH_PENTAHO_PORT
      replace:
        path: {{ FILEBEAT_DIR }}/conf.d/{{ FILEBEAT_PENTAHO_CONFIG_FILE }}
        regexp: "//$LOGSTASH_PENTAHO_PORT"
        replace: "{{ LOGSTASH_PENTAHO_PORT }}"
        backup: yes
        
    - name: Change the SNOWBOUND_HOME
      replace:
        path: {{ FILEBEAT_DIR }}/conf.d/{{ FILEBEAT_SNOWBOUND_CONFIG_FILE }}
        regexp: "//$SNOWBOUND_HOME"
        replace: "{{ SNOWBOUND_HOME }}"
        backup: yes
        
    - name: Change the LOGSTASH_SNOWBOUND_PORT
      replace:
        path: {{ FILEBEAT_DIR }}/conf.d/{{ FILEBEAT_SNOWBOUND_CONFIG_FILE }}
        regexp: "//$LOGSTASH_SNOWBOUND_PORT"
        replace: "{{ LOGSTASH_SNOWBOUND_PORT }}"
        
    - name: Change the MYSQL_HOME
      replace:
        path: {{ FILEBEAT_DIR }}/conf.d/{{ FILEBEAT_MYSQL_CONFIG_FILE }}
        regexp: "//$MYSQL_HOME"
        replace: "{{ MYSQL_HOME }}"
        backup: yes
        
    - name: Change the LOGSTASH_MYSQL_PORT
      replace:
        path: {{ FILEBEAT_DIR }}/conf.d/{{ FILEBEAT_MYSQL_CONFIG_FILE }}
        regexp: "//$LOGSTASH_MYSQL_PORT"
        replace: "{{ LOGSTASH_MYSQL_PORT }}"
        backup: yes
        
    - name: Copy the FILEBEAT_ELK_FLATTENED_CONFIG_FILE
      copy:
        src: filebeat_configs/{{ FILEBEAT_ELK_FLATTENED_CONFIG_FILE }}
        dest: '"{{ FILEBEAT_DIR }}"/filebeat.yml'
        
    - name: Copy the kibana default dashboard to /opt/kibana/kibanaDefaultDashboard/
      copy:
        src: kibanaDefaultDashboard/
        dest: /opt/kibana/kibanaDefaultDashboard/
        
    - name: Import the default dashboard
      shell: /opt/filebeat/filebeat setup -E "output.elasticsearch.username=elastic" -E "output.elasticsearch.password=elasticpass" -E "setup.kibana.host=http://localhost:5601" -E "setup.dashboards.directory =/opt/kibana/kibanaDefaultDashboard/" || fail "#> Failed to impport default dashboard"